---
title: "Wind Power & Energy Yield Forecast"
subtitle: Forecast Horizon Seven (07) days ahead
author: "Jorge A. Thomas"
date: "`r Sys.Date()`"
format:    
    html:
      self-contained: true
      code-fold: true
      df-print: tibble
      code-summary: "Show the code"
      grid: 
        margin-width: 350px
execute: 
  echo: fenced
reference-location: margin # margin
citation-location: document

---

## Location and Site Assessment

```{r}
#| label: initialisation
#| message: false
#| echo: false

source("init.R")

```


```{python}
#| label: request
#| message: false
#| echo: false

# Initialise libraries

import openmeteo_requests
import requests_cache
import pandas as pd
from retry_requests import retry

# Setup the Open-Meteo API client with cache and retry on error
cache_session = requests_cache.CachedSession('.cache', expire_after = 3600)
retry_session = retry(cache_session, retries = 5, backoff_factor = 0.2)
openmeteo = openmeteo_requests.Client(session = retry_session)

# Make sure all required weather variables are listed here
# The order of variables in hourly or daily is important to assign them correctly below
url = "https://api.open-meteo.com/v1/dwd-icon"
params = {
	"latitude": 53.88,
	"longitude": 7.40,
	"hourly": ["relative_humidity_2m", "surface_pressure", "wind_speed_120m", "temperature_120m"],
	"wind_speed_unit": "ms",
	"timeformat": "unixtime"
}
responses = openmeteo.weather_api(url, params=params)

# Process first location. Add a for-loop for multiple locations or weather models
response = responses[0]
print(f"Coordinates {response.Latitude()}째N {response.Longitude()}째E")
print(f"Elevation {response.Elevation()} m asl")
print(f"Timezone {response.Timezone()} {response.TimezoneAbbreviation()}")
print(f"Timezone difference to GMT+0 {response.UtcOffsetSeconds()} s")

# Process hourly data. The order of variables needs to be the same as requested.
hourly = response.Hourly()
hourly_relative_humidity_2m = hourly.Variables(0).ValuesAsNumpy()
hourly_surface_pressure = hourly.Variables(1).ValuesAsNumpy()
hourly_wind_speed_120m = hourly.Variables(2).ValuesAsNumpy()
hourly_temperature_120m = hourly.Variables(3).ValuesAsNumpy()

hourly_data = {"date": pd.date_range(
	start = pd.to_datetime(hourly.Time(), unit = "s", utc = True),
	end = pd.to_datetime(hourly.TimeEnd(), unit = "s", utc = True),
	freq = pd.Timedelta(seconds = hourly.Interval()),
	inclusive = "left"
)}
hourly_data["relative_humidity_2m"] = hourly_relative_humidity_2m
hourly_data["surface_pressure"] = hourly_surface_pressure
hourly_data["wind_speed_120m"] = hourly_wind_speed_120m
hourly_data["temperature_120m"] = hourly_temperature_120m

hourly_dataframe = pd.DataFrame(data = hourly_data)

```

::: {#fig-intro layout-ncol="1"}
![Source: Google Earth](./images/wt_location.png){width="80%"}

North Sea, Germany.
:::


```{r}

hourly_df <- py$hourly_dataframe

#head(hourly_df)


# C, m/s, hPa, %

# ====== Wind Turbine Specs ======

# Manufacturer: Goldwin
# Model: GW 165-6.0 6300 

# Variable Speed - Variable pitch

wt_rated_power <- 6000 #  [kW]
wt_rated_wind_speed <- 11.4 # [m/s] at standard air density
wt_area <- 21382 # squared metres
wt_hub_height <- 100 # metres
Cp <- 0.45 # Power Coefficient
wt_rotor_diam <- 165 # metres

wt_ws_cut_in <- 3 # m/s
wt_ws_cut_out <- 24 # m/s

# Speed Range During Power Production
wt_min_speed <- 5.5  # [RPM]
wt_max_speed <- 10.7  # [RPM] Nominal

#' Tip speed of blade 
#' Linear speed of blade tip for Tip-Speed Ratio (lambda) calc.
wt_min_tip_speed <- 2*pi * (wt_min_speed/60) * (wt_rotor_diam/2) # [m/s]
wt_max_tip_speed <- 2*pi * (wt_max_speed/60) * (wt_rotor_diam/2) # [m/s] Nominal

# wt_max_tip_speed <- 92 # [m/s] # From Specs.

# ====== Onshore Wind Park =======

n_wind_turbines <- 1
installed_capacity <- (n_wind_turbines * wt_rated_power) / 1000 # [MW]


 # Lat =  53째52'44.10"N

 # Lon =   7째24'28.35"E

```

## Weather Variables Forecast

- relative_humidity_2m [%]
- surface_pressure [hPa]
- wind_speed_120m [m]
- temperature_120m [Celsius]



::: {#fig-intro layout-ncol="1"}
![Source: https://www.directindustry.com/prod/goldwind/](./images/Goldwind_GW165-60.jpg){width="80%"}

Goldwin Wind Turbine - Model: GW 165-6.0 6300 
:::